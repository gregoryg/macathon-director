
owner_tag=${OWNER_TAG}  # example: gregoryg
ssh_username=${SSH_USERNAME}
cm_admin_user=${CM_ADMIN_USER}
cm_admin_pass=${CM_ADMIN_PASS}
instance_prefix=${INSTANCE_PREFIX} # MODIFY THIS example gg for gg-admin, gg-cm etc

# Environment (cloud platform login), Deployment (CM), and cluster name
environmentName: c-137
deploymentName: wedding-squanchers
name: squanchy

# Uncomment the cloud provider section containing your auth credentials
# include file("../providers/azure-provider.conf")
include file("../providers/google-provider.conf")
# include file("../providers/aws-provider.conf")

#
# SSH credentials to use to connect to the machines
#
ssh {
    username: ${ssh_username}
    privateKey: ${HOME}/.ssh/<<REPLACE_ME_private_key>>
}

# Uncomment the correct cloud provider instance defaults
# include file("azure-instance-defaults.conf")
# include file("aws-instance-defaults.conf")
include file("gcp-instance-defaults.conf")


cloudera-manager {
    username=${cm_admin_user}
    password=${cm_admin_pass}
    instance: ${instance-defaults} {
        tags { application: "Cloudera Manager 6" }
        instanceNamePrefix: gg-cm
    }
    enableEnterpriseTrial: true
    tlsEnabled=false
    csds = [
             "https://archive.cloudera.com/cdsw1/1.5.0/csd/CLOUDERA_DATA_SCIENCE_WORKBENCH-CDH6-1.5.0.jar"
          ]
    configs {
       CLOUDERA_MANAGER {
          custom_banner_html="Phoenixperson? I thought we decided on Cyberbird"
       }
    }
}


include file("external-database.conf")

cluster {
    products {
      CDH: 6
      CDSW: 1
    }
    parcelRepositories: [
        "https://archive.cloudera.com/cdh6/6.1.1/parcels/"
        "https://archive.cloudera.com/cdsw1/1.5.0/parcels/"
    ]
    services: [
               CDSW
               HDFS
               HBASE
               HIVE
               HUE
               IMPALA
               OOZIE
               SPARK_ON_YARN
               YARN
               ZOOKEEPER
              ]

   configs {
      CDSW {
         "cdsw.domain.config"="cdsw.internal" # The fully qualified domain name for the CDSW host
         # "cdsw.master.ip.config"="10.128.0.5"
      }
      HUE {
         hue_service_safety_valve="""[notebook]
show_notebooks=true"""
      }
   }
   instancePostCreateScriptsPaths: ["../bootstrap-scripts/cdsw-post.sh"]
    # nodes {
    #     count: 5
    #     instance: ${instances.n1h4-2-localssd} {
    #         instanceNamePrefix: gg-worker
    #     }
    # }
    masters {
       count: 1
       minCount: 1
       instance: ${instance-defaults} {
          instanceNamePrefix: ${instance_prefix}-master
          dataDiskSize: 512
          dataDiskCount: 2
       }
       configs {
          HIVE {
             HIVESERVER2 {
                hiveserver2_spark_executor_cores: 4
                }
          }
       }
               roles {
            HIVE: [HIVEMETASTORE,HIVESERVER2,GATEWAY]
            # SOLR: [SOLR_SERVER]
            HDFS: [NAMENODE,SECONDARYNAMENODE,BALANCER]
            OOZIE: [OOZIE_SERVER]
            HUE: [HUE_SERVER]
            # "KS_INDEXER": [
            #     "HBASE_INDEXER"
            # ]
            HBASE: [MASTER, HBASETHRIFTSERVER]
            ZOOKEEPER: [SERVER]
            YARN: [RESOURCEMANAGER,JOBHISTORY]
            IMPALA: [CATALOGSERVER,STATESTORE]
            SPARK_ON_YARN: [SPARK_YARN_HISTORY_SERVER, GATEWAY]
        }

    }
        workers {
        count=1
        minCount=1
        configs {}
        instance=${instance-defaults} {
        # instance {
            instanceNamePrefix=${INSTANCE_PREFIX}-work
            dataDiskCount=4
            ebsVolumeCount=4 # AWS
            dataDiskType=SSD
            ebsVolumeType=st1 # AWS
            dataDiskSize=500
            dataDiskSizeGb=500 # for Google plugin
            ebsVolumeSizeGiB=500 # AWS
            bootstrapScriptsPaths=["../bootstrap-scripts/java8-boot.sh"]
        }
        roles {
            HDFS=[DATANODE]
            HIVE=[GATEWAY]
            HBASE=[REGIONSERVER]
            YARN=[NODEMANAGER]
            IMPALA=[IMPALAD]
            SPARK_ON_YARN=[GATEWAY]
        }
    }
    zoo-workers {
        count=2
        configs {}
        minCount=3
        instance=${instance-defaults} {
        # instance {
            instanceNamePrefix=${instance_prefix}-zwork
            dataDiskCount=4
            ebsVolumeCount=4 # AWS
            dataDiskType=SSD
            ebsVolumeType=st1 # AWS
            dataDiskSize=500
            dataDiskSizeGb=500 # for Google plugin
            ebsVolumeSizeGiB=500 # AWS
            bootstrapScriptsPaths=["../bootstrap-scripts/java8-boot.sh"]
        }
        roles {
            HDFS=[DATANODE]
            HIVE=[GATEWAY]
            HBASE=[REGIONSERVER]
            YARN=[NODEMANAGER]
            IMPALA=[IMPALAD]
            SPARK_ON_YARN=[GATEWAY]
            ZOOKEEPER=[SERVER]
        }
    }
    gateways {
        count=1
        configs {}
        minCount=1
        instance=${instance-defaults} {
            # type="m4.large" # AWS
            # type="STANDARD_DS12_V2" # Azure
            type=n1-standard-2 # GCP            
            instanceNamePrefix=${INSTANCE_PREFIX}-gw
            dataDiskCount=0
            ebsVolumeCount=0 # AWS
            bootstrapScriptsPaths=["../bootstrap-scripts/java8-boot.sh"]
            # bootstrapScriptsPaths=["../bootstrap-scripts/java8-boot.sh", "../bootstrap-scripts/cdsw-node-prep.sh"]
        }
        roles {
            HIVE=[GATEWAY]
            # SOLR=[GATEWAY]
            HDFS=[GATEWAY]
            # FLUME=[AGENT]
            HBASE=[GATEWAY]
            YARN=[GATEWAY]
            SPARK_ON_YARN=[GATEWAY]
        }
    }

    cdsw-master {
        count=1
        configs {
           CDSW {
              CDSW_DOCKER {
                 "cdsw.docker.devices.config"="/dev/sdc" # /dev/sd[ab] are taken by OS on Azure; use /dev/xvd[fg] for AWS
                }
            }
        }
        minCount=1
        instance=${instance-defaults} {
            # type="m4.4xlarge" # AWS
            # type="STANDARD_DS13_V2" # Azure
            type=n1-highmem-16 # GCP
            instanceNamePrefix=${instance_prefix}-cdswm
            dataDiskCount=2
            ebsVolumeCount=2 # AWS
            dataDiskType=SSD
            ebsVolumeType=gp2 # AWS
            dataDiskSize=500
            dataDiskSizeGb=500 # for Google plugin
            ebsVolumeSizeGiB=500 # AWS
            bootstrapScriptsPaths=["../bootstrap-scripts/cdsw-node-prep.sh"]
            normalizationConfig {
               mountAllUnmountedDisks=false
            }
          }
        roles {
            CDSW=[CDSW_MASTER, CDSW_APPLICATION, CDSW_DOCKER]
            HIVE=[GATEWAY]
            # SOLR=[GATEWAY]
            HDFS=[GATEWAY]
            HBASE=[GATEWAY]
            YARN=[GATEWAY]
            SPARK_ON_YARN=[GATEWAY]
        }
   }
}
